services:
  play-highlight-backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: play-highlight-backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      SERVER_PORT: 3001
    depends_on:
      play-highlight-mq:
        condition: service_healthy
      play-highlight-postgres:
        condition: service_started

  play-highlight-worker:
    build:
      context: ../worker
      dockerfile: Dockerfile
    container_name: play-highlight-worker
    restart: unless-stopped
    env_file:
      - .env
    environment:
      SERVER_PORT: 3002
    depends_on:
      play-highlight-mq:
        condition: service_healthy
      play-highlight-postgres:
        condition: service_started

  play-highlight-postgres:
    image: postgres:latest
    container_name: play-highlight-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER_NAME}
      POSTGRES_PASSWORD: ${DB_USER_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  play-highlight-redis:
    image: redis:latest
    container_name: play-highlight-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  play-highlight-mq:
    image: "rabbitmq:3-management"
    container_name: play-highlight-mq
    restart: unless-stopped
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  play-highlight-minio:
    image: docker.io/bitnami/minio
    container_name: play-highlight-minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - "minio_data:/bitnami/minio/data"
    environment:
      MINIO_ROOT_USER: ${AWS_S3_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_S3_SECRET_ACCESS_KEY}

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  minio_data:
    driver: local
